import{_ as s,c as e,a,o as l}from"./app-BvfsiuvN.js";const t={};function n(h,i){return l(),e("div",null,[...i[0]||(i[0]=[a(`<blockquote><p>深度学习需要数据集以进行训练，这离不开数据集标注工具。于我主要使用 labelimg 和 labelme 分别进行目标检测和实例分割任务的标注。</p><p>然而按照这两个项目的官方 README 并不能正常使用，因此尝试使用更新更快的 Python 包管理工具 uv 进行安装。</p><p>本文介绍了两款常用数据标注软件的源代码安装方法，并结合安装过程介绍 uv 的基本使用。</p></blockquote><p>Conda 对于这样一个简单的 Python 应用来说实在是太笨重了，我不可能给一个一百行代码的脚本创建一个专用的虚拟环境。</p><p>而 uv 是一个用 Rust 编写的极速 Python 包和项目管理工具，比 pip 快 100 倍的同时还提供完善的 venv 管理功能。</p><p>因此我最后的策略是：在 WSL 中使用 Mamba 作为包管理和虚拟环境管理器，进行深度学习训练和推理；而在 Windows 中使用 uv，以支持日常简单脚本开发。</p><h2 id="_1-uv" tabindex="-1"><a class="header-anchor" href="#_1-uv"><span>1 uv</span></a></h2><p>你可以在<a href="https://uv.doczh.com/getting-started/installation/" target="_blank" rel="noopener noreferrer">安装 uv</a> 中找到各个平台的安装方法。至于 Windows，推荐使用 WinGet 获取 uv：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">winget install </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">astral</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">sh.uv  </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">e</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装完后重启终端，检查 uv 是否可用：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">uv </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-labelimg" tabindex="-1"><a class="header-anchor" href="#_2-labelimg"><span>2 labelimg</span></a></h2><p><a href="https://github.com/HumanSignal/labelImg" target="_blank" rel="noopener noreferrer">labelimg 官方文档</a>中提到可以使用 pip 进行安装：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pip install labelImg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但是在 Windows 下似乎会遇到权限问题，因此我尝试从源码进行安装。</p><p>首先克隆 labelimg 仓库：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">git clone git</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">github.com</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:HumanSignal</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">labelImg.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>进入项目后，使用 uv 在项目中创建一个目录<code>.venv</code>作为虚拟环境：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">cd labelImg</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">uv venv </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">python </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.9</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后激活环境：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.venv\\Scripts\\activate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其实很多时候不用激活，uv 会自动隔离虚拟环境。</p><p>然后安装依赖：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">uv pip install pyqt5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">tools lxml</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pyrcc5 </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">o libs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">resources.py resources.qrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>从源代码安装并启动 labelimg：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">uv pip install .</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">un run labelimg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>后面再想要启动 labelimg 时，无需执行激活环境命令，只需要进入项目文件夹执行：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">uv run labelimg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即可。</p></div><h2 id="_3-labelme" tabindex="-1"><a class="header-anchor" href="#_3-labelme"><span>3 labelme</span></a></h2><p>和 labelimg 类似，labelme 官方文档也提及可以使用 pip 安装，但我遇到了同样的问题，因此 labelme 也从源码安装，流程基本类似。</p><p>首先克隆仓库：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">git clone git</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">github.com</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:wkentaro</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">labelme.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>labelme 提供了<code>uv.lock</code>文件，它是 uv 的锁文件，记录了虚拟环境里精确 Python 版本和包版本。通过它精确重现完全相同的环境。要从<code>uv.lock</code>中恢复环境，只需要：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">uv sync </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">python </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>从源码安装并启动 labelme：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">uv pip install .</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">uv run labelme</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,33)])])}const d=s(t,[["render",n]]),p=JSON.parse('{"path":"/article/kspeq06x/","title":"使用 uv 安装数据集标注工具 labelimg 和 labelme","lang":"zh-CN","frontmatter":{"title":"使用 uv 安装数据集标注工具 labelimg 和 labelme","createTime":"2025/08/22 10:27:06","permalink":"/article/kspeq06x/","tags":["Deeplearning"],"description":"深度学习需要数据集以进行训练，这离不开数据集标注工具。于我主要使用 labelimg 和 labelme 分别进行目标检测和实例分割任务的标注。 然而按照这两个项目的官方 README 并不能正常使用，因此尝试使用更新更快的 Python 包管理工具 uv 进行安装。 本文介绍了两款常用数据标注软件的源代码安装方法，并结合安装过程介绍 uv 的基本使用。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 uv 安装数据集标注工具 labelimg 和 labelme\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.yoake.cc/article/kspeq06x/"}],["meta",{"property":"og:site_name","content":"YOYOArticle"}],["meta",{"property":"og:title","content":"使用 uv 安装数据集标注工具 labelimg 和 labelme"}],["meta",{"property":"og:description","content":"深度学习需要数据集以进行训练，这离不开数据集标注工具。于我主要使用 labelimg 和 labelme 分别进行目标检测和实例分割任务的标注。 然而按照这两个项目的官方 README 并不能正常使用，因此尝试使用更新更快的 Python 包管理工具 uv 进行安装。 本文介绍了两款常用数据标注软件的源代码安装方法，并结合安装过程介绍 uv 的基本使用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Deeplearning"}]]},"readingTime":{"minutes":2.32,"words":696},"git":{},"autoDesc":true,"filePathRelative":"articles/250822-数据集标注工具.md","headers":[],"categoryList":[]}');export{d as comp,p as data};
