import{_ as t,c as p,d as e,a as m,b as l,e as a,w as i,r as c,o as r}from"./app-BvfsiuvN.js";const o={};function h(g,s){const n=c("VPLink");return r(),p("div",null,[e("p",null,[l(n,{href:"/deeplearning/od/01/#_2-%E9%94%9A%E6%A1%86"},{default:i(()=>[...s[0]||(s[0]=[a("锚框",-1)])]),_:1}),s[1]||(s[1]=a("用于提取物体的候选区域，然后再对区域进行分类识别。检测流程明显分为两步，因此称为两阶段检测，又称为基于区域的目标检测。",-1))]),s[2]||(s[2]=m('<p>代表性的两阶段检测器就是 R-CNN 系列，包括 R-CNN、Fast R-CNN、Faster R-CNN。</p><p>由于两阶段检测器不是笔者学习的重点，因此仅作简单介绍。</p><h2 id="_1-r-cnn" tabindex="-1"><a class="header-anchor" href="#_1-r-cnn"><span>1 R-CNN</span></a></h2><p>R-CNN首先从输入图像中选取若干提议区域（锚框），并标注它们的类别和边界框。然后，用卷积神经网络对每个提议区域进行前向传播以抽取其特征，接下来用每个提议区域的特征来预测类别和边界框。</p><div style="text-align:center;"><p><img src="https://oss.yoake.cc/art/deeplearning/1754383728873.webp" alt="1754383728873.webp"></p></div><p>尽管 R-CNN 模型通过预训练的卷积神经网络有效地抽取了图像特征，但它的速度很慢。想象一下，我们可能从一张图像中选出上千个提议区域，这需要上千次的卷积神经网络的前向传播来执行目标检测。这种庞大的计算量使得 R-CNN 在现实世界中难以被广泛应用。</p><h2 id="_2-fast-r-cnn" tabindex="-1"><a class="header-anchor" href="#_2-fast-r-cnn"><span>2 Fast R-CNN</span></a></h2><p>R-CNN 的主要性能瓶颈在于，对每个提议区域，卷积神经网络的前向传播是独立的，而没有共享计算。 由于这些区域通常有重叠，独立的特征抽取会导致重复的计算。</p><p>Fast R-CNN 对 R-CN N的主要改进之一，是仅在整张图像上执行卷积神经网络的前向传播。</p><div style="text-align:center;"><p><img src="https://oss.yoake.cc/art/deeplearning/1754383811917.webp" alt="1754383811917.webp"></p></div><ol><li><p>与R-CNN相比，Fast R-CNN用来提取特征的卷积神经网络的输入是整个图像。卷积神经网络的输出的形状为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mi>c</mi><mo>×</mo><msub><mi>h</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">1 \\times c \\times h_1 \\times w_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；</p></li><li><p>假设选择性搜索生成了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>个提议区域。这些形状各异的提议区域在卷积神经网络的输出上分别标出了形状各异的兴趣区域。然后，这些感兴趣的区域需要进一步抽取出形状相同的特征（比如指定高度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mn>2</mn></msub><mtext>和宽度</mtext></mrow><annotation encoding="application/x-tex">h_2和宽度</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和宽度</span></span></span></span>w_2$），以便于连结后输出。为了实现这一目标，Fast R-CNN 引入了兴趣区域池化层，将卷积神经网络的输出和提议区域作为输入，输出连结后的各个提议区域抽取的特征，形状为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>c</mi><mo>×</mo><msub><mi>h</mi><mn>2</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">n \\times c \\times h_2 \\times w_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；</p></li><li><p>通过全连接层将输出形状变换为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">n \\times d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>，其中超参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>取决于模型设计；</p></li><li><p>预测<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>个提议区域中每个区域的类别和边界框。更具体地说，在预测类别和边界框时，将全连接层的输出分别转换为形状为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">n \\times q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>是类别的数量）的输出和形状为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>×</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">n \\times 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 的输出。其中预测类别时使用softmax回归。</p></li></ol><h2 id="_3-faster-r-cnn" tabindex="-1"><a class="header-anchor" href="#_3-faster-r-cnn"><span>3 Faster R-CNN</span></a></h2><p>Faster R-CNN 提出将选择性搜索替换为区域提议网络，从而减少提议区域的生成数量，并保证目标检测的精度。</p><div style="text-align:center;"><p><img src="https://oss.yoake.cc/art/deeplearning/1754384136086.webp" alt="1754384136086.webp"></p></div><ol><li><p>使用填充为 1 的 3×3 的卷积层变换卷积神经网络的输出，并将输出通道数记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>。这样，卷积神经网络为图像抽取的特征图中的每个单元均得到一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span> 的新特征。</p></li><li><p>以特征图的每个像素为中心，生成多个不同大小和宽高比的锚框并标注它们。</p></li><li><p>使用锚框中心单元长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span> 的特征，分别预测该锚框的二元类别（含目标还是背景）和边界框。</p></li><li><p>使用非极大值抑制，从预测类别为目标的预测边界框中移除相似的结果。最终输出的预测边界框即是兴趣区域池化层所需的提议区域。</p></li></ol>',15))])}const w=t(o,[["render",h]]),x=JSON.parse('{"path":"/deeplearning/od/02/","title":"Part 2 两阶段检测器","lang":"zh-CN","frontmatter":{"title":"Part 2 两阶段检测器","createTime":"2025/08/05 16:38:33","permalink":"/deeplearning/od/02/","description":"用于提取物体的候选区域，然后再对区域进行分类识别。检测流程明显分为两步，因此称为两阶段检测，又称为基于区域的目标检测。 代表性的两阶段检测器就是 R-CNN 系列，包括 R-CNN、Fast R-CNN、Faster R-CNN。 由于两阶段检测器不是笔者学习的重点，因此仅作简单介绍。 1 R-CNN R-CNN首先从输入图像中选取若干提议区域（锚框）...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Part 2 两阶段检测器\\",\\"image\\":[\\"https://oss.yoake.cc/art/deeplearning/1754383728873.webp\\",\\"https://oss.yoake.cc/art/deeplearning/1754383811917.webp\\",\\"https://oss.yoake.cc/art/deeplearning/1754384136086.webp\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.yoake.cc/deeplearning/od/02/"}],["meta",{"property":"og:site_name","content":"YOYOArticle"}],["meta",{"property":"og:title","content":"Part 2 两阶段检测器"}],["meta",{"property":"og:description","content":"用于提取物体的候选区域，然后再对区域进行分类识别。检测流程明显分为两步，因此称为两阶段检测，又称为基于区域的目标检测。 代表性的两阶段检测器就是 R-CNN 系列，包括 R-CNN、Fast R-CNN、Faster R-CNN。 由于两阶段检测器不是笔者学习的重点，因此仅作简单介绍。 1 R-CNN R-CNN首先从输入图像中选取若干提议区域（锚框）..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://oss.yoake.cc/art/deeplearning/1754383728873.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"readingTime":{"minutes":3.38,"words":1015},"git":{},"autoDesc":true,"filePathRelative":"repos/deeplearning/3.Char.3 目标检测基础/2.md","headers":[]}');export{w as comp,x as data};
