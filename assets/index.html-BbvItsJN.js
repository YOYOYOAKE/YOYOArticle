import{_ as n,c as a,d as t,b as r,e as o,r as l,o as i}from"./app-BvfsiuvN.js";const c={};function s(y,e){const p=l("LinkCard");return i(),a("div",null,[e[0]||(e[0]=t("p",null,"众所周知，TypeScript 具有一个图灵完备的类型系统。",-1)),e[1]||(e[1]=t("p",null,"尽管在实际开发中使用这样的操作会被人打，但是谁不想挑战一下在类型层面上完成原本的代码级编程呢？",-1)),e[2]||(e[2]=t("p",null,[t("a",{href:"https://github.com/type-challenges/type-challenges",target:"_blank",rel:"noopener noreferrer"},"TypeChallanges"),o(" 是一个 TypeScript 类型体操姿势合集。")],-1)),e[3]||(e[3]=t("p",null,"在此之前，我已经整理好了一些前置知识。",-1)),r(p,{title:"深入探索 TypeScript：不仅仅是 JavaScript+Type",href:"/article/9nbewde3/"}),r(p,{title:"深入探索 TypeScript：类型编程",href:"/article/wm0esi3k/"})])}const m=n(c,[["render",s]]),g=JSON.parse('{"path":"/type-challanges/","title":"TypeScript 类型体操","lang":"zh-CN","frontmatter":{"title":"TypeScript 类型体操","createTime":"2025/07/07 10:20:14","permalink":"/type-challanges/","description":"众所周知，TypeScript 具有一个图灵完备的类型系统。 尽管在实际开发中使用这样的操作会被人打，但是谁不想挑战一下在类型层面上完成原本的代码级编程呢？ TypeChallanges 是一个 TypeScript 类型体操姿势合集。 在此之前，我已经整理好了一些前置知识。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript 类型体操\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.yoake.cc/type-challanges/"}],["meta",{"property":"og:site_name","content":"YOYOArticle"}],["meta",{"property":"og:title","content":"TypeScript 类型体操"}],["meta",{"property":"og:description","content":"众所周知，TypeScript 具有一个图灵完备的类型系统。 尽管在实际开发中使用这样的操作会被人打，但是谁不想挑战一下在类型层面上完成原本的代码级编程呢？ TypeChallanges 是一个 TypeScript 类型体操姿势合集。 在此之前，我已经整理好了一些前置知识。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"readingTime":{"minutes":0.47,"words":141},"git":{},"autoDesc":true,"filePathRelative":"repos/type-challanges/index.md","headers":[]}');export{m as comp,g as data};
