import{_ as i,c as a,a as e,o as n}from"./app-BvfsiuvN.js";const l={};function t(h,s){return n(),a("div",null,[...s[0]||(s[0]=[e(`<blockquote><p>最近在寻找一些深度学习环境的配置教程供新人们学习，但是找了一圈基本都不满意，不是安装繁琐，就是和现代开发脱节……干脆自己写一篇现代的配置方案。</p><p>本文介绍使用 WSL 进行配置深度学习环境。内容包括：</p><p>WSL 的安装及自动代理；Miniconda 和 Mamba 安装；PyTorch GPU 版本安装。</p></blockquote><h2 id="_1-wsl" tabindex="-1"><a class="header-anchor" href="#_1-wsl"><span>1 WSL</span></a></h2><p>适用于 Linux 的 Windows 子系统（Windows Subsystem for Linux）在 Windows 系统中提供了 Linux 的实现，并且和 Windos 在硬件和文件系统上实现互通。</p><h3 id="_1-1-wsl-安装" tabindex="-1"><a class="header-anchor" href="#_1-1-wsl-安装"><span>1.1 WSL 安装</span></a></h3><p>一般来说，你可以在 Microsoft Store 获取 Linux 发行版，如 <a href="https://apps.microsoft.com/detail/9NZ3KLHXDJP5" target="_blank" rel="noopener noreferrer">Ubuntu 24.04.1 LTS</a>。</p><p>如果 Microsoft Store 无法打开，则可以通过 PowerShell 安装。以管理员身份打开 PowerShell，输入：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">wsl </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">--</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">install Ubuntu</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">-</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">24.04</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即可启用 WSL 并安装 Ubuntu 发行版。</p><p>参考资料：<a href="https://learn.microsoft.com/zh-cn/windows/wsl/install" target="_blank" rel="noopener noreferrer">如何使用 WSL 在 Windows 上安装 Linux</a></p><h3 id="_1-2-设置-linux-用户名和密码" tabindex="-1"><a class="header-anchor" href="#_1-2-设置-linux-用户名和密码"><span>1.2 设置 Linux 用户名和密码</span></a></h3><p>从开始菜单或使用命令<code>wsl</code>启动 Ubuntu 子系统，第一次启动时要求输入 Ubuntu 用户名和密码。</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>Installing,this may take a few minutes...</span></span>
<span class="line"><span>Installation successful!</span></span>
<span class="line"><span>Please create a default UNIX user account, The username does not match your Windows username.</span></span>
<span class="line"><span>For more information visit: https://aka.ms/wslusers</span></span>
<span class="line"><span>Enter new UNIX username:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后输入用户名和密码。</p><ul><li>Ubuntu 用户名和密码与 Windows 用户名和密码无关。</li><li>输入密码时将会隐藏输入。</li><li>创建用户名和密码后，该用户将是 Ubuntu 的默认用户，并将在启动时自动登录。</li></ul><p>参考资料：<a href="https://learn.microsoft.com/zh-cn/windows/wsl/setup/environment#set-up-your-linux-username-and-password" target="_blank" rel="noopener noreferrer">设置 Linux 用户名和密码</a></p><h3 id="_1-3-配置-wsl-网络为镜像模式" tabindex="-1"><a class="header-anchor" href="#_1-3-配置-wsl-网络为镜像模式"><span>1.3 配置 WSL 网络为镜像模式</span></a></h3><p>在默认情况下，WSL 与 Windows 的网络环境是隔离的，因此 WSL 无法直接访问 Windows 应用所使用的端口。这在深度学习环境配置中可能带来不便。通过启用 <strong>mirrored</strong> 模式，WSL 可以与 Windows 共享网络环境。</p><p>打开 PowerShell，输入：</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-powershell"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">code </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">%</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">USERPROFILE</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">%</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">\\.wslconfig</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将会使用 VSCode 打开 WSL 配置文件，输入：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>[experimental]</span></span>
<span class="line"><span>autoMemoryReclaim=gradual    # 自动内存回收</span></span>
<span class="line"><span>networkingMode=mirrored      # 镜像网络模式</span></span>
<span class="line"><span>dnsTunneling=true            # DNS 隧道</span></span>
<span class="line"><span>firewall=true                # Hyper-V 防火墙</span></span>
<span class="line"><span>autoProxy=true               # 自动代理，使 WSL 能够使用 Windows 的 HTTP 代理</span></span>
<span class="line"><span>sparseVhd=true               # 默认启用稀疏 VHD</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存，然后使用<code>wsl --shutdown</code>关闭 WSL 以应用配置。</p><p>启用<code>autoProxy</code>后，当 Windows 系统的代理配置发生变化时，WSL 会提示你重启以同步更新。</p><h3 id="_1-4-更新软件包" tabindex="-1"><a class="header-anchor" href="#_1-4-更新软件包"><span>1.4 更新软件包</span></a></h3><p>进入 Ubuntu 更新软件包到最新：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sh"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;&amp;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> upgrade</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_1-5-使用-vscode-连接到-wsl" tabindex="-1"><a class="header-anchor" href="#_1-5-使用-vscode-连接到-wsl"><span>1.5 使用 VSCode 连接到 WSL</span></a></h3><p>VSCode 提供了对 WSL 的完善支持。打开 VSCode，点击左下角的“打开远程窗口”按钮，连接到 WSL 即可。</p><h2 id="_2-miniconda-和-mamba" tabindex="-1"><a class="header-anchor" href="#_2-miniconda-和-mamba"><span>2 Miniconda 和 Mamba</span></a></h2><p>Conda 是一个常用的 Python 包和环境管理工具，而 Miniconda 则是 Anaconda 的精简版本，仅保留其核心功能。</p><p>Mamba 则作为 Conda 的高性能替代实现而诞生，它重构了 Conda 的依赖解析与下载机制，通过多线程并行下载显著提升了环境解析和安装的速度。</p><p>而 Mamba 基于 Conda 环境，因此需要先安装 Miniconda。</p><h3 id="_2-1-miniconda" tabindex="-1"><a class="header-anchor" href="#_2-1-miniconda"><span>2.1 Miniconda</span></a></h3><p>从 <a href="https://repo.anaconda.com/miniconda/" target="_blank" rel="noopener noreferrer">Miniconda 官方仓库</a>下载并运行最新的安装脚本。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sh</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Miniconda3-latest-Linux-x86_64.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行脚本后会弹出：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>Welcome to Miniconda3 py313_25.5.1-1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>In order to continue the installation process, please review the license</span></span>
<span class="line"><span>agreement.</span></span>
<span class="line"><span>Please, press ENTER to continue</span></span>
<span class="line"><span>&gt;&gt;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按回车确认继续。然后阅读 MINICONDA END USER LICENSE AGREEMENT，此处按方向下键或 PageDown 键至末尾，输入<code>yes</code>进行安装。</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>MINICONDA END USER LICENSE AGREEMENT</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Do you accept the license terms? [yes|no]</span></span>
<span class="line"><span>&gt;&gt;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选择安装路径，按回车安装至默认位置（<code>~/miniconda3/</code>）：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>Miniconda3 will now be installed into this location:</span></span>
<span class="line"><span>/home/yoake/miniconda3</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  - Press ENTER to confirm the location</span></span>
<span class="line"><span>  - Press CTRL-C to abort the installation</span></span>
<span class="line"><span>  - Or specify a different location below</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[/home/yoake/miniconda3] &gt;&gt;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>询问是否要将 Conda 命令注入到终端，输入<code>yes</code>：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>You can undo this by running \`conda init --reverse $SHELL\`? [yes|no]</span></span>
<span class="line"><span>[no] &gt;&gt;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>至此安装完成，重启终端即可。</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>==&gt; For changes to take effect, close and re-open your current shell. &lt;==</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Thank you for installing Miniconda3!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你不想每次打开终端就进入 base 环境，则可以执行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --set</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> auto_activate_base</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-2-mamba" tabindex="-1"><a class="header-anchor" href="#_2-2-mamba"><span>2.2 Mamba</span></a></h3><p>切换到 base 环境，然后安装 Mamba：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> activate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> base</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> mamba</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> base</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> conda-forge</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后执行命令使 mamba 自动完成初始化：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mamba</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> shell</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --shell</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> bash</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --root-prefix=/home/yoake/miniconda3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Mamba 几乎实现了对所有 Conda 命令的替代，只需要把<code>conda</code>替换为<code>mamba</code>即可：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 创建虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> myenv</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.10</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mamba</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> myenv</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.10</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 切换虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> activate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> myenv</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mamba</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> activate</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> myenv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mamba</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-pytorch" tabindex="-1"><a class="header-anchor" href="#_3-pytorch"><span>3 PyTorch</span></a></h2><p>现在已经不推荐从源码安装 CUDA Toolkit 和 cuDNN，而是借助 conda 进行安装。</p><p>首先创建虚拟环境：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mamba</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> deeplearning</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.10</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Conda 包的版本约束</p><p>你可能注意到，以下两条命令的行为是不同的：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mamba</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> deeplearning</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.10</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mamba</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> create</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> deeplearning</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.10</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>=</code>表示安装 3.10 系列的最新版本（比如 3.10.18），Conda 会自动解析最新的小版本。而<code>==</code>会锁死到 3.10.0，而不是最新的 3.10.x。</p></div><p>激活虚拟环境，然后安装<code>pytorch-cuda</code>。<code>pytorch-cuda</code>是 Conda 的一个虚拟包，用来给 PyTorch 安装对应 CUDA runtime 和 cuDNN 的，其目的是让你在 Conda 环境里直接用 GPU 版本的 PyTorch，而不需要安装系统级 CUDA Toolkit。</p><p>你可以在<a href="https://pytorch.org/get-started/previous-versions/" target="_blank" rel="noopener noreferrer">这里</a>找到各个包的版本对应关系，以及对应的安装命令。</p><p>如对于 PyTorch 1.13.1，使用以下命令安装：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mamba</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1.13.1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchvision==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0.14.1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchaudio==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0.13.1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch-cuda=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">11.7</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nvidia</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装完成后，使用以下命令检查是否配置成功：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">python</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">import torch; print(&#39;Torch version:&#39;, torch.__version__); print(&#39;CUDA available:&#39;, torch.cuda.is_available()); print(&#39;CUDA version:&#39;, torch.version.cuda); print(&#39;Current device:&#39;, torch.cuda.get_device_name(0) if torch.cuda.is_available() else &#39;CPU&#39;)</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>期望输出：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>Torch version: 1.13.1</span></span>
<span class="line"><span>CUDA available: True</span></span>
<span class="line"><span>CUDA version: 11.7</span></span>
<span class="line"><span>Current device: NVIDIA GeForce RTX 4060 Ti</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，环境配置结束。</p><h2 id="_4-常见问题" tabindex="-1"><a class="header-anchor" href="#_4-常见问题"><span>4 常见问题</span></a></h2><h3 id="_4-1-pytorch-训练或推理时报错" tabindex="-1"><a class="header-anchor" href="#_4-1-pytorch-训练或推理时报错"><span>4.1 PyTorch 训练或推理时报错</span></a></h3><ul><li><code>Could not load library libcudnn_cnn_infer.so.8. Error: libcuda.so: cannot open shared object file: No such file or directory</code></li></ul><p>这是 PyTorch 加载 cuDNN 库时失败了，因为找不到它依赖的 libcuda.so。</p><p>使用<code>nvidia-smi</code>检查驱动是否正常，然后确认 cuDNN 是否已安装：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mamba</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> list</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cudnn</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如以下输出：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>pytorch  1.13.1  py3.10_cuda11.7_cudnn8.5.0_0  pytorch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后查找<code>libcuda.so</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">find</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -name</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">libcuda.so*</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>期望结果：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-text"><span class="line"><span>/usr/lib/wsl/lib/libcuda.so</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这说明 Windows 侧的 GPU 驱动已经传进来了，只是 PyTorch 在运行时没有找到这些库。只需要添加环境变量即可解决问题。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">export LD_LIBRARY_PATH=/usr/lib/wsl/lib:$LD_LIBRARY_PATH</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,82)])])}const r=i(l,[["render",t]]),p=JSON.parse('{"path":"/article/cy3bc97x/","title":"基于 WSL 和 Mamba 优雅配置深度学习环境","lang":"zh-CN","frontmatter":{"title":"基于 WSL 和 Mamba 优雅配置深度学习环境","createTime":"2025/08/21 09:19:34","permalink":"/article/cy3bc97x/","tags":["Deeplearning"],"description":"最近在寻找一些深度学习环境的配置教程供新人们学习，但是找了一圈基本都不满意，不是安装繁琐，就是和现代开发脱节……干脆自己写一篇现代的配置方案。 本文介绍使用 WSL 进行配置深度学习环境。内容包括： WSL 的安装及自动代理；Miniconda 和 Mamba 安装；PyTorch GPU 版本安装。 1 WSL 适用于 Linux 的 Windows...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基于 WSL 和 Mamba 优雅配置深度学习环境\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://www.yoake.cc/article/cy3bc97x/"}],["meta",{"property":"og:site_name","content":"YOYOArticle"}],["meta",{"property":"og:title","content":"基于 WSL 和 Mamba 优雅配置深度学习环境"}],["meta",{"property":"og:description","content":"最近在寻找一些深度学习环境的配置教程供新人们学习，但是找了一圈基本都不满意，不是安装繁琐，就是和现代开发脱节……干脆自己写一篇现代的配置方案。 本文介绍使用 WSL 进行配置深度学习环境。内容包括： WSL 的安装及自动代理；Miniconda 和 Mamba 安装；PyTorch GPU 版本安装。 1 WSL 适用于 Linux 的 Windows..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Deeplearning"}]]},"readingTime":{"minutes":5.58,"words":1675},"git":{},"autoDesc":true,"filePathRelative":"articles/250821-深度学习环境配置.md","headers":[],"categoryList":[]}');export{r as comp,p as data};
